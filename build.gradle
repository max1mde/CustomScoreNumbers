import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

group = 'com.maximde'
version = '1.2.0'

repositories {
    mavenCentral()
    maven { url 'https://repo.codemc.io/repository/maven-releases/' }
    maven { url 'https://jitpack.io' }
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "papermc-repo"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}


tasks.build {
    finalizedBy(tasks.shadowJar)
}

subprojects {
    apply plugin: 'java'

    tasks.jar {
        archiveBaseName = "CustomScoreNumbers-" + project.name
        archiveClassifier.set("")
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        implementation "net.kyori:adventure-text-minimessage:4.16.0"
    }

    repositories {
        mavenCentral()
        maven { url 'https://repo.codemc.io/repository/maven-releases/' }
        maven { url 'https://jitpack.io' }
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
        maven {
            name = "papermc-repo"
            url = uri("https://repo.papermc.io/repository/maven-public/")
        }
    }

    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(17))
        disableAutoTargetJvm()
    }

    tasks.compileJava {
        options.release.set(17)
    }

    afterEvaluate {
        if (plugins.hasPlugin('com.github.johnrengelman.shadow')) {
            tasks.build {
                finalizedBy(tasks.shadowJar)
            }
        }
    }
}

dependencies {
    implementation(project(":spigot"))
    implementation(project(":velocity"))
    implementation(project(":bungeecord"))
}

gradle.projectsEvaluated {
    tasks.withType(ShadowJar).configureEach { shadowJarTask ->
        if (shadowJarTask.name.contains('velocity')) {
            shadowJarTask.relocate("io.github.retrooper.packetevents", "io.github.retrooper.packetevents.velocity")
        } else if (shadowJarTask.name.contains('spigot')) {
            shadowJarTask.relocate("io.github.retrooper.packetevents", "io.github.retrooper.packetevents.spigot")
        } else if (shadowJarTask.name.contains('bungeecord')) {
            shadowJarTask.relocate("io.github.retrooper.packetevents", "io.github.retrooper.packetevents.bungeecord")
        }
    }
}